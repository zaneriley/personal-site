import fs from "node:fs";
import path from "node:path";
import {
  calculateSpaceScale,
  calculateTypeScale,
  generateSpaceCSSVariables,
  generateTypeCSSVariables,
} from "./fluid-type.ts";

const OUTPUT_FILE = path.resolve("css/_typography.css");

const typeConfig = {
  minWidth: 320,
  maxWidth: 1914,
  minFontSize: 18,
  maxFontSize: 18,
  minTypeScale: 1.2,
  maxTypeScale: 1.414,
  positiveSteps: 7,
  negativeSteps: 2,
  relativeTo: "viewport",
};

const spaceConfig = {
  minWidth: 320,
  maxWidth: 1440,
  minSpaceSize: 16,
  maxSpaceSize: 20,
  minSpaceScale: 1.5,
  maxSpaceScale: 2,
  positiveSteps: 5,
  negativeSteps: 3,
  relativeTo: "viewport",
};

function generateScales() {
  const typeLabels = [
    "7xl",
    "6xl",
    "5xl",
    "4xl",
    "3xl",
    "2xl",
    "1xl",
    "md",
    "1xs",
    "2xs",
  ];
  const spaceLabels = ["4xl", "3xl", "2xl", "1xl", "md", "1xs", "2xs", "3xs"];

  const typeSizes = calculateTypeScale(typeConfig).map((size, index) => ({
    ...size,
    label: typeLabels[index] || `unlabeled-${index}`,
  }));

  const spaceSizes = calculateSpaceScale(spaceConfig).map((size, index) => ({
    ...size,
    label: spaceLabels[index] || `unlabeled-${index}`,
  }));

  return { typeSizes, spaceSizes };
}

function generateCSS() {
  const { typeSizes, spaceSizes } = generateScales();

  const typeVariables = generateTypeCSSVariables(typeConfig);
  const spaceVariables = generateSpaceCSSVariables(spaceConfig);

  console.log("Type Variables:", typeVariables);
  console.log("Space Variables:", spaceVariables);

  return `
  /* 
* DO NOT EDIT THIS FILE DIRECTLY. 
* Your changes will be overwritten. This file is auto-generated. 
* Generated on: ${new Date().toISOString()}
*/
  
:root {
  /* Fluid Typography Variables */
${typeVariables}

  /* Fluid Spacing Variables */
${spaceVariables}
}

    `.trim();
}

function writeCSS(css) {
  try {
    fs.writeFileSync(OUTPUT_FILE, css);
    console.log(`Fluid CSS variables generated successfully at ${OUTPUT_FILE}`);
  } catch (error) {
    console.error("Error writing CSS file:", error);
    process.exit(1);
  }
}

function main() {
  const css = generateCSS();
  writeCSS(css);
  console.log("CSS generation complete.");
}

main();
export { generateScales };
