name: "CI"

on:
  pull_request:
    branches: ["*"]
  push:
    branches: ["main", "master"]

jobs:
  test:
    runs-on: "ubuntu-22.04"

    steps:
      - uses: "actions/checkout@v2"

      - name: "Install CI dependencies"
        run: ./run ci:install-deps

      - name: "Setup environment"
        run: |
          cp --no-clobber .env.example .env
          sed -i "s|.:/app|/tmp:/tmp|g" .env*
          sed -i "s|.:/app|/tmp:/tmp|g" docker-compose.yml

      - name: "Lint and check"
        run: |
          shellcheck run bin/*
          ./run lint:dockerfile
          ./run lint
          ./run format:check

      - name: "Check .env file"
        run: cat .env

      - name: "Print environment variables"
        run: env | grep POSTGRES

      - name: "Set PostgreSQL variables"
        run: |
          echo "POSTGRES_USER=portfolio" >> $GITHUB_ENV
          echo "POSTGRES_PASSWORD=password" >> $GITHUB_ENV

      - name: "Check Docker Compose version"
        run: docker compose version

      - name: "Build and start Docker"
        run: |
          docker compose build
          docker compose up -d
          docker compose logs

      - name: "Print Docker Compose config"
        run: docker compose config

      - name: "Database setup"
        run: |
          . .env
          ./run wait-until "docker compose exec -T -e PGPASSWORD=${POSTGRES_PASSWORD} postgres psql -U ${POSTGRES_USER} ${POSTGRES_USER} -c 'SELECT 1'"
          ./run mix ecto.setup

      - name: "Compile and check for critical security issues"
        run: |
          ./run mix compile
          ./run security:check --threshold high

      - name: "Run tests"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
          GITHUB_REF: ${{ github.ref }}
          GITHUB_SHA: ${{ github.sha }}
          GITHUB_ACTOR: ${{ github.actor }}
        run: ./run test:coverage

      - name: "Full Sobelow scan"
        if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
        run: ./run security:check